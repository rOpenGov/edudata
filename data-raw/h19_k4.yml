# Taulukot
- id: h19_k4_tbls_1
  domain: h19_k4
  lang_en: ""
  lang_fi: 'Lataa QOG-projektin Basic data (dat <- rqog::read_qog(which_data = "basic", data_type = "time-series", year = 2019) ). Tee taulukko jossa F-kirjaimella alkavien maiden osalta datassa olevat vuodet. Malli taulukosta alla'
  extra: |
          # cname              n
          # Fiji              73
          # Finland           73
          # France (-1962)    73
          # France (1963-)    73
  ans: |
        library(dplyr)
        dat <- rqog::read_qog(which_data = "basic", data_type = "time-series", year = 2019)
        dat %>%
          filter(grepl("^F", cname)) %>%
          count(cname)
        # Or
        dat %>%
          filter(grepl("^F", cname)) %>%
          group_by(cname) %>%
          summarise(n = n())
- id: h19_k4_tbls_2
  domain: h19_k4
  lang_en: ""
  lang_fi: 'Lataa QOG-projektin Basic data (dat <- rqog::read_qog(which_data = "basic", data_type = "time-series", year = 2019) ). Valitse undp_hdi muuttuja, poista puuttuvat arvot ja tee taulukko jossa A-kirjaimella alkavien maiden osalta datassa olevien vuosien määrä. Alla mallitaulukko.'
  extra: |
          # cname                   n
          # Afghanistan            16
          # Albania                28
          # Algeria                28
          # Andorra                18
          # Angola                 19
          # Antigua and Barbuda    13
          # Argentina              28
          # Armenia                26
          # Australia              28
          # Austria                28
          # Azerbaijan             23
  ans: |
        library(dplyr)
        dat <- rqog::read_qog(which_data = "basic", data_type = "time-series", year = 2019)
        dat %>%
          filter(grepl("^A", cname),
                 !is.na(undp_hdi)) %>%
          count(cname)
        # Or
        dat %>%
          filter(grepl("^F", cname),
                 !is.na(undp_hdi)) %>%
          group_by(cname) %>%
          summarise(n = n())
- id: h19_k4_tbls_3
  domain: h19_k4
  lang_en: ""
  lang_fi: 'Lataa QOG-projektin Basic data (dat <- rqog::read_qog(which_data = "basic", data_type = "time-series", year = 2019) ). Tee taulukko jossa y-kirjaimeen loppuvien maiden korkein undp_hdi-arvo ja ko. vuosi.'
  extra: |
          # cname    undp_hdi  year
          # Germany     0.936  2017
          # Hungary     0.838  2017
          # Italy       0.88   2017
          # Norway      0.953  2017
          # Paraguay    0.702  2015
          # Paraguay    0.702  2016
          # Paraguay    0.702  2017
          # Turkey      0.791  2017
          # Uruguay     0.804  2017

  ans: |
        library(dplyr)
        dat <- rqog::read_qog(which_data = "basic", data_type = "time-series", year = 2019)
        dat %>%
          filter(grepl("y$", cname)) %>%
          group_by(cname) %>%
          filter(undp_hdi == max(undp_hdi, na.rm = TRUE)) %>%
          select(cname,undp_hdi,year) %>%
          ungroup()
- id: h19_k4_tbls_4
  domain: h19_k4
  lang_en: ""
  lang_fi: 'Lataa QOG-projektin Basic data (dat <- rqog::read_qog(which_data = "basic", data_type = "time-series", year = 2019) ). Tee taulukko jossa o-kirjaimeen loppuvien maiden tuorein wdi_homicides-arvo ja ko. vuosi.'
  extra: |
          # cname               wdi_homicides  year
          # Congo                       9.32   2015
          # Lesotho                    41.2    2015
          # Mexico                     19.3    2016
          # Monaco                      0      2015
          # Montenegro                  4.46   2016
          # Morocco                     1.24   2015
          # San Marino                  0      2011
          # Togo                        9.00   2015
          # Trinidad and Tobago        30.9    2015
          # Burkina Faso                0.370  2015
  ans: |
        library(dplyr)
        dat <- rqog::read_qog(which_data = "basic", data_type = "time-series", year = 2019)
        dat %>%
          select(cname,year,wdi_homicides) %>%
          filter(!is.na(wdi_homicides),
                 grepl("o$", cname)) %>%
          group_by(cname) %>%
          filter(year == max(year, na.rm = TRUE)) %>%
          select(cname,wdi_homicides,year) %>%
          ungroup()
- id: h19_k4_tbls_5
  domain: h19_k4
  lang_en: ""
  lang_fi: 'Lataa QOG-projektin Basic data (dat <- rqog::read_qog(which_data = "basic", data_type = "time-series", year = 2019) ). Tee taulukko jossa d-kirjaimeen loppuvien maiden osalta top3 maat muuttujan wdi_internet-suhteen paremmuusjärjestyksessä kunakin vuonna 2014,2015,2016 ja 2017.'
  extra: |
          # cname        year wdi_internet
          # Iceland      2014         98.2
          # Switzerland  2014         87.4
          # Finland      2014         86.5
          # Iceland      2015         98.2
          # New Zealand  2015         88.2
          # Switzerland  2015         87.5
          # Iceland      2016         98.2
          # Switzerland  2016         89.1
          # New Zealand  2016         88.5
          # Switzerland  2017         93.7
          # Finland      2017         87.5
          # Ireland      2017         84.5

  ans: |
        library(dplyr)
        dat <- rqog::read_qog(which_data = "basic", data_type = "time-series", year = 2019)
        dat %>%
          select(cname,year,wdi_internet) %>%
          filter(!is.na(wdi_internet),
                 grepl("d$", cname),
                 year %in% 2014:2017) %>%
          group_by(year) %>%
          arrange(desc(wdi_internet)) %>%
          slice(1:3) %>%
          ungroup()
# reglar expressions
- id: h19_k4_regexp1
  domain: h19_k4
  lang_en: ""
  lang_fi: "Käsitellään dplyr-paketin Starwars dataa. Miten valitse hahmot, joiden nimessä on `-`-merkki"
  ans: |
        dplyr::starwars %>% filter(grepl('-', name))
- id: h19_k4_regexp2
  domain: h19_k4
  lang_en: ""
  lang_fi: "Käsitellään dplyr-paketin Starwars dataa. Valitse hahmot joiden kotimaailman nimi on kaksiosainen Ja laske hahmojen määrät kotimaailmoittain"
  extra: |
          #   homeworld          n
          #   <chr>          <int>
          # 1 Aleen Minor        1
          # 2 Bestine IV         1
          # 3 Cato Neimoidia     1
          # 4 Concord Dawn       1
          # 5 Glee Anselm        1
          # 6 Haruun Kal         1
          # 7 Mon Cala           1
          # 8 Nal Hutta          1
  ans: |
        dplyr::starwars %>%
            filter(grepl(" ", homeworld)) %>%
            count(homeworld)
- id: h19_k4_regexp3
  domain: h19_k4
  lang_en: ""
  lang_fi: "Käsitellään dplyr-paketin Starwars dataa. Luo uusi muuttuja `eye_color_base`, jossa on `eye_color`-muuttujan arvon ensimmäinen väri (blue-gray -> blue)! Valitse lopuksi vain hahmot joilla on kaksiosaisen silmien väri ja muuttujat `name`, `eye_color`, `eye_color_base` "
  extra: |
          #   name           eye_color     eye_color_base
          #   <chr>          <chr>         <chr>
          # 1 Obi-Wan Kenobi blue-gray     blue
          # 2 R4-P17         red, blue     red
          # 3 Grievous       green, yellow green
  ans: |
        dplyr::starwars %>%
              mutate(eye_color_base = gsub('-.+$|,.+$', "", eye_color)) %>%
              filter(grepl("-|,", eye_color)) %>%
              select(name,eye_color,eye_color_base)
# faktori
- id: h19_k4_factor_1
  domain: h19_k4
  lang_en: ""
  lang_fi: 'Suomen kekkosenjälkeiset presidentit ovat olleet Ahtisaari, Halonen, Koivisto ja Niinistö. Tee sukunimistä faktori, jonka leveleissä ne asetetaan järjestykseen kausien mukaan. (ekaksi koivisto)'
  extra: |
          [1] Ahtisaari Halonen   Koivisto  Niinistö
          Levels: Koivisto Ahtisaari Halonen Niinistö
  ans: |
        factor(c("Ahtisaari","Halonen","Koivisto","Niinistö"),
                levels = c("Koivisto","Ahtisaari","Halonen","Niinistö"))
- id: h19_k4_factor_2
  domain: h19_k4
  lang_en: ""
  lang_fi: 'Lataa QOG-projektin Basic data (dat <- rqog::read_qog(which_data = "basic", data_type = "time-series", year = 2019) ). Miten saat seuraavanlaisen kuvan http://courses.markuskainu.fi/utur2019/kuvat/h19_k4_factor_2.png'
  extra: ""
  ans: |
        library(dplyr)
        library(ggplot2)
        library(forcats)
        dat <- rqog::read_qog(which_data = "basic", data_type = "time-series", year = 2019)
        kuvadata <- dat %>%
          select(cname,year,wdi_internet) %>%
          filter(!is.na(wdi_internet),
                 grepl("d$", cname),
                 year %in% 2017) %>%
          mutate(cname = fct_reorder(cname, wdi_internet))

        ggplot(kuvadata, aes(x = cname, y = wdi_internet)) +
          geom_col() +
          labs(title = "Vuoden 2017 internetin käyttöasteet d:hen loppuvissa maissa")
- id: h19_k4_factor_3
  domain: h19_k4
  lang_en: ""
  lang_fi: '"Pura" starwars-datan films-muuttujan "sisäkkäisyys" (nested) seuraavalla koodilla: `dplyr::starwars %>% tidyr::unnest(films) %>% select(name,gender,films)` Miten saat ko. datasta  seuraavanlaisen kuvan http://courses.markuskainu.fi/utur2019/kuvat/h19_k4_factor_3.png'
  extra: ""
  ans: |
        library(dplyr)
        library(ggplot2)
        library(forcats)
        library(tidyr)

        kuvadata <- dplyr::starwars %>%
          unnest(films) %>%
          select(name,gender,films) %>%
          group_by(films) %>% count(gender) %>%
          filter(gender == "female") %>%
          ungroup() %>%
          mutate(films = fct_reorder(films, n))

        p <- ggplot(kuvadata, aes(x = films, y = n)) +
          geom_col() +
          labs(title = "Star Wars elokuvat niissä esiintyneiden naisten määrän mukaan", y = "naisten määrä") +
          theme(axis.text.x = element_text(angle = 90))
- id: h19_k4_factor_4
  domain: h19_k4
  lang_en: ""
  lang_fi: '"Pura" starwars-datan films-muuttujan "sisäkkäisyys" (nested) seuraavalla koodilla: `dplyr::starwars %>% tidyr::unnest(films) %>% select(name,gender,films)` Miten saat ko. datasta  seuraavanlaisen kuvan http://courses.markuskainu.fi/utur2019/kuvat/h19_k4_factor_4.png'
  extra: ""
  ans: |
        library(dplyr)
        library(dplyr)
        library(ggplot2)
        library(forcats)
        library(tidyr)

        kuvadata <- dplyr::starwars %>%
          unnest(films) %>%
          select(name,gender,films) %>%
          filter(!is.na(gender)) %>%
          group_by(films) %>%
          count(gender) %>%
          mutate(osuus = round(n/sum(n)*100,1))


        # suput esiintymisasteen (kaikissa elokuvissa) mukaan
        suput <- kuvadata %>%
          group_by(gender) %>%
          summarise(osuus = sum(osuus)) %>%
          arrange(desc(osuus)) %>%
          pull(gender)

        # elokuvat miesten esiintymisasteen mukaan
        elokuvat <- kuvadata %>%
          filter(gender == "male") %>%
          arrange(desc(osuus)) %>%
          pull(films)

        # asetetaan faktorilevelit
        kuvadata$gender <- factor(kuvadata$gender, levels = rev(suput))
        kuvadata$films <- factor(kuvadata$films, levels = elokuvat)

        ggplot(kuvadata, aes(x = films,
                             y = osuus,
                             fill = gender)) +
          geom_col() +
          labs(title = "Star Wars elokuvat ja hahmojen 'sukupuoliosuudet'",
               subtitle = "Elokuvat järjestetty miesten suhteellisen osuuden mukaan",
               y = "naisten määrä") +
          theme(axis.text.x = element_text(angle = 90))
# Join
- id: h19_k4_join_nycflights13_1
  domain: h19_k4
  lang_en: ""
  lang_fi: "Asenna CRAN:sta paketti `nycflights13` ja lataa se. Datat on kuvattu luvussa: http://r4ds.had.co.nz/relational-data.html#nycflights13-relational - yhdistä datat `flights` ja `airlines`. Kuinka monta lentoa `Hawaiian Airlines Inc.` lensi John F. Kennedyn kansainväliseltä lentoasemalta (JFK) vuonna 2013. Datojen dokumentaation saa esim. komennolla `?flights`"
  ans: |
        library(nycflights13)
        library(dplyr)
        left_join(flights, airlines) %>%
                  filter(name == "Hawaiian Airlines Inc.",
                         year == 2013,
                         origin == "JFK") %>%
                  summarise(n=n())
- id: h19_k4_join_nycflights13_2
  domain: h19_k4
  lang_en: ""
  lang_fi: "Yhdistä dataan `flights` datat `airlines` ja `planes`. Kuinka monta matkustajaa `US Airways Inc.` yhtiön lennoilla JFK:lta oli keskimäärin vuonna 2013."
  ans: |
        library(nycflights13)
        library(dplyr)

        left_join(flights, airlines) %>%
                  left_join(planes) %>%
                  filter(name == "US Airways Inc.",
                         year == 2013,
                         origin == "JFK") %>%
                  summarise(seats = mean(seats, na.rm = TRUE))
- id: h19_k4_join_nycflights13_3
  domain: h19_k4
  lang_en: ""
  lang_fi: "Yhdistä dataan `flights` data `airports` ja `weather`. Montako sellaista lentoa kentältä JFK:n kentältä lähti vuonna 2013 jolloin tuulennopeus >= 30?"
  ans: |
        library(nycflights13)
        library(dplyr)
        left_join(flights, airports, by = c("origin" = "faa")) %>%
                  left_join(weather) %>%
                  filter(origin == "JFK",
                         year == 2013,
                         wind_speed >= 30) %>%
                  count()
# Export exercises
- id: h19_k4_save_in_rds
  domain: h19_k4
  lang_en: "dplyr-package includes data called `storms`. Save it in working directory in RDS format. How can you read the data back in R?"
  lang_fi: "dplyr-paketin mukana tulee data `storms`. Tallenna se työhakemistoon RDS muodossa. Miten luet datan takaisin R:ään?"
  ans: |
        saveRDS(storms, "./storms.RDS")
        storms <- readRDS("./storms.RDS")
- id: h19_k4_save_in_csv
  domain: h19_k4
  lang_en: "dplyr-package includes data called `storms`. Save it in working directory in csv format.  How can you read the data back in R?"
  lang_fi: "dplyr-paketin mukana tulee data `storms`. Tallenna se työhakemistoon csv muodossa. Miten luet datan takaisin R:ään?"
  ans: |
        write.csv(storms, "./storms.csv")
        storms <- read.csv("./storms.csv", stringsAsFactors = FALSE)
- id: h19_k4_save_in_xlsx
  domain: h19_k4
  lang_en: "dplyr-package includes data called `storms`. Save it in working directory in xlsx format. How can you read the data back in R?"
  lang_fi: "dplyr-paketin mukana tulee data `storms`. Tallenna se työhakemistoon xlsx muodossa. Miten luet datan takaisin R:ään?"
  ans: |
        openxlsx::write.xlsx(storms, "./storms.xlsx")
        readxl::read_excel("./storms.xlsx")
- id: h19_k4_save_in_sav
  domain: h19_k4
  lang_en: "dplyr-package includes data called `storms`. Save it in working directory in csv format.  How can you read the data back in R?"
  lang_fi: "dplyr-paketin mukana tulee data `storms`. Tallenna se työhakemistoon SPSS:n .sav muodossa. Miten luet datan takaisin R:ään?"
  ans: |
        haven::write_sav(storms, "./storms.sav")
        storms <- haven::read_sav("./storms.sav")
- id: h19_k4_save_in_fav
  domain: h19_k4
  lang_en: ""
  lang_fi: "dplyr-paketin mukana tulee data `storms`. Tallenna se työhakemistoon käyttämäsi tilasto-ohjelman formaatissa SEKÄ .csv-muodossa. Saatko luettua ko. tiedostot ko. tilasto-ohjelmaan?"
  ans: saan!
# visualisointiharjoitukset
- id: h19_k4_visu_h19_k4_1
  domain: h19_k4
  lang_en: ""
  lang_fi: 'Lataa QOG-projektin Basic data (dat <- rqog::read_qog(which_data = "basic", data_type = "time-series", year = 2019) ). Miten saat seuraavanlaisen kuvan http://courses.markuskainu.fi/utur2019/kuvat/visu_h19_k4_1.png'
  ans: |
        library(dplyr)
        library(ggplot2)
        dat <- rqog::read_qog(which_data = "basic", data_type = "time-series", year = 2019)
        dat2 <- dat %>%
          select(year,cname,wdi_homicides) %>%
          filter(!is.na(wdi_homicides),
                 grepl("o$", cname))
        ggplot(dat2, aes(x = year,
                         y = wdi_homicides,
                         color = cname)) +
          geom_point() +
          geom_line() +
          theme(legend.position = "none") +
          geom_text(data = dat2 %>%
                      group_by(cname)  %>%
                      filter(year == max(year, na.rm = TRUE)) %>%
                      ungroup(),
                    aes(label = cname))
- id: h19_k4_visu_h19_k4_2
  domain: h19_k4
  lang_en: ""
  lang_fi: 'Lataa QOG-projektin Basic data (dat <- rqog::read_qog(which_data = "basic", data_type = "time-series", year = 2019) ). Miten saat seuraavanlaisen kuvan http://courses.markuskainu.fi/utur2019/kuvat/visu_h19_k4_2.png'
  ans: |
        library(dplyr)
        library(ggplot2)
        dat <- rqog::read_qog(which_data = "basic", data_type = "time-series", year = 2019)
        dat2 <- dat %>%
          select(year,cname,wdi_internet,wdi_elerenew) %>%
          filter(year %in% c(2008,2010,2012,2014))

        ggplot(dat2, aes(x = wdi_internet,
                              y = wdi_elerenew,
                              color = cname,
                              group = 1)) +
          geom_point() +
          facet_wrap(~year) +
          geom_smooth(method = "lm") +
          theme(legend.position = "none")
- id: h19_k4_visu_h19_k4_3
  domain: h19_k4
  lang_en: ""
  lang_fi: 'Lataa QOG-projektin Basic data (dat <- rqog::read_qog(which_data = "basic", data_type = "time-series", year = 2019) ). Miten saat seuraavanlaisen kuvan http://courses.markuskainu.fi/utur2019/kuvat/visu_h19_k4_3.png'
  ans: |
        library(dplyr)
        library(ggplot2)
        dat <- rqog::read_qog(which_data = "basic", data_type = "time-series", year = 2019)
        dat2 <- dat %>%
          select(year,cname,wdi_fertility,wdi_empagr) %>%
          filter(year %in% c(2008,2010,2012,2014))

        dat_cor <- dat2 %>%
          na.omit() %>%
          group_by(year) %>%
          summarise(corr = cor(wdi_empagr,wdi_fertility, method = "pearson"),
                    wdi_fertility = mean(wdi_fertility, na.rm = TRUE),
                    wdi_empagr = mean(wdi_empagr, na.rm = TRUE))

        ggplot(dat2, aes(x = wdi_empagr,
                              y = wdi_fertility)) +
          geom_point() +
          facet_wrap(~year) +
          geom_smooth() +
          geom_text(data = dat_cor,
                    aes(label = paste0("r. ", round(corr, 3))),
                    color = "dim grey",
                    size = 25, alpha = .4)





